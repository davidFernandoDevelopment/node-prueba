"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.router=void 0;const express_1=__importDefault(require("express")),error_helper_1=require("../../helper/error.helper"),mongo_utils_1=require("../../validators/mongo.utils"),schema_validator_1=require("../../validators/schema.validator"),role_schema_1=require("./role.schema"),yenv_1=__importDefault(require("yenv")),role_operations_1=require("./role.operations"),role_model_1=__importDefault(require("./role.model")),role_usecase_1=require("../application/role.usecase"),role_controller_1=require("./role.controller"),env=yenv_1.default(),roleOperations=new role_operations_1.RoleOperations(role_model_1.default),roleUseCase=new role_usecase_1.RoleUseCase(roleOperations),roleController=new role_controller_1.RoleController(roleUseCase),router=express_1.default.Router();exports.router=router,router.get("/",error_helper_1.Errors.handleError(async(e,r)=>{const o=await roleController.getControllerGeneric({isActive:!0});r.json(o)})),router.get("/:id",[mongo_utils_1.validarId],error_helper_1.Errors.handleError(async(e,r)=>{const o=e.params.id,l=await roleController.getOneControllerGeneric(o);r.json(l)})),router.post("/",schema_validator_1.SchemaValidator.validate(role_schema_1.schemas.POST_INSERT),error_helper_1.Errors.handleError(async(e,r)=>{const o=e.body,l=await roleController.insertControllerGeneric(o);r.json(l)})),router.put("/:id",[mongo_utils_1.validarId,schema_validator_1.SchemaValidator.validate(role_schema_1.schemas.PUT_UPDATE)],error_helper_1.Errors.handleError(async(e,r)=>{const o=e.params.id,l=e.body,a=await roleController.updateControllerGeneric({_id:o},l);r.json(a)})),router.delete("/:id",[mongo_utils_1.validarId],error_helper_1.Errors.handleError(async(e,r)=>{const o=e.params.id,l=await roleController.deleteControllerGeneric(o);r.json(l)})),router.get("/page/:page",[schema_validator_1.SchemaValidator.validate(role_schema_1.schemas.GET_PAGINATION)],error_helper_1.Errors.handleError(async(e,r)=>{const o=+e.params.page,l=await roleController.getByPageControllerGeneric({isActive:!0},o,env.PAGINATION);r.json({status:200,results:l})}));